import glob, os

Import( 'env' )

this_name = os.path.split( os.getcwd() )[1]
filenames = glob.glob( os.path.join( env.GetLaunchDir(), this_name, '*', 'src', '*.cc' ) )
if filenames != []:
    filenames = [ apply( os.path.join, tuple( x.split( os.path.sep )[-3:] ) ) for x in filenames ]
    object_list = env.SharedObject( filenames )
    if env['precompile']:
        env.Depends( object_list, env.pcheader )
    env.object_collector  += object_list
    lib = env.SharedLibrary( this_name, object_list )
    env.Default( lib )
else:
    print 'Warning: No source files found in subdirectory',this_name

# Build the main application
m = env.Copy(  )
m.Append( LIBS = [ 'Vertigo', 'CMSSkin', 'DummySkin', 'LDCSkin', 'SIDSkin', 'VertigoEnvironment', 'VertigoAnalysis' ] )
m.Append( CPPFLAGS = '-fPIC' )

# if env['visualiser']:
  # env.Append ( LDFLAGS = [ '-L/home/walten/install/lib/', '-lRaveVis' ] )

env['vertigo'] = m.Program ( target = '../vertigo', source = [ 'main/main.cpp' ] )

#if env.harvest:
#  m.Program ( target = '../HarvestTest', source = [ 'VertigoHarvester/test/HarvestTest.cpp' ] )

Export( 'env' )
